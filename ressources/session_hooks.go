// Generated by: main
// TypeWriter: hooks
// Directive: +gen on Session

package ressources

import (
	"time"

	"github.com/Solher/zest/domain"
)

func (i *SessionInter) BeforeCreate(session *domain.Session) error {
	session.ID = 0
	session.CreatedAt = time.Time{}
	session.UpdatedAt = time.Time{}

	err := session.ScopeModel()
	if err != nil {
		return err
	}

	return nil
}

func (i *SessionInter) AfterCreate(session *domain.Session) error {
	return nil
}

func (i *SessionInter) BeforeUpdate(session *domain.Session) error {
	session.ID = 0
	session.CreatedAt = time.Time{}
	session.UpdatedAt = time.Time{}

	err := session.ScopeModel()
	if err != nil {
		return err
	}

	return nil
}

func (i *SessionInter) AfterUpdate(session *domain.Session) error {
	return nil
}

func (i *SessionInter) BeforeDelete(session *domain.Session) error {
	return nil
}

func (i *SessionInter) AfterDelete(session *domain.Session) error {
	return nil
}
