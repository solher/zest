// Generated by: main
// TypeWriter: access
// Directive: +gen on Session

package ressources

import (
	"github.com/Solher/zest/interfaces"
	"github.com/dimfeld/httptreemux"
)

func setSessionAccess(routeDir *interfaces.RouteDirectory, controller *SessionCtrl) {
	key := interfaces.NewDirectoryKey("sessions")
	create := httptreemux.HandlerFunc(controller.Create)
	find := httptreemux.HandlerFunc(controller.Find)
	findByID := httptreemux.HandlerFunc(controller.FindByID)
	upsert := httptreemux.HandlerFunc(controller.Upsert)
	updateByID := httptreemux.HandlerFunc(controller.UpdateByID)
	deleteAll := httptreemux.HandlerFunc(controller.DeleteAll)
	deleteByID := httptreemux.HandlerFunc(controller.DeleteByID)
	related := httptreemux.HandlerFunc(controller.Related)
	relatedOne := httptreemux.HandlerFunc(controller.RelatedOne)

	routeDir.Add(key.For("Create"), &interfaces.Route{Method: "POST", Path: "/sessions", Handler: &create, Visible: true, CheckPermissions: true})
	routeDir.Add(key.For("Find"), &interfaces.Route{Method: "GET", Path: "/sessions", Handler: &find, Visible: true, CheckPermissions: true})
	routeDir.Add(key.For("FindByID"), &interfaces.Route{Method: "GET", Path: "/sessions/:id", Handler: &findByID, Visible: true, CheckPermissions: true})
	routeDir.Add(key.For("Upsert"), &interfaces.Route{Method: "PUT", Path: "/sessions", Handler: &upsert, Visible: true, CheckPermissions: true})
	routeDir.Add(key.For("UpdateByID"), &interfaces.Route{Method: "PUT", Path: "/sessions/:id", Handler: &updateByID, Visible: true, CheckPermissions: true})
	routeDir.Add(key.For("DeleteAll"), &interfaces.Route{Method: "DELETE", Path: "/sessions", Handler: &deleteAll, Visible: true, CheckPermissions: true})
	routeDir.Add(key.For("DeleteByID"), &interfaces.Route{Method: "DELETE", Path: "/sessions/:id", Handler: &deleteByID, Visible: true, CheckPermissions: true})

	routeDir.Add(key.For("CreateRelated"), &interfaces.Route{Method: "POST", Path: "/sessions/:pk/:related", Handler: &related, Visible: true, CheckPermissions: false})
	routeDir.Add(key.For("FindRelated"), &interfaces.Route{Method: "GET", Path: "/sessions/:pk/:related", Handler: &related, Visible: true, CheckPermissions: false})
	routeDir.Add(key.For("FindByIDRelated"), &interfaces.Route{Method: "GET", Path: "/sessions/:pk/:related/:fk", Handler: &relatedOne, Visible: true, CheckPermissions: false})
	routeDir.Add(key.For("UpsertRelated"), &interfaces.Route{Method: "PUT", Path: "/sessions/:pk/:related", Handler: &related, Visible: true, CheckPermissions: false})
	routeDir.Add(key.For("UpsertRelated"), &interfaces.Route{Method: "PUT", Path: "/sessions/:pk/:related/:fk", Handler: &relatedOne, Visible: true, CheckPermissions: false})
	routeDir.Add(key.For("DeleteAllRelated"), &interfaces.Route{Method: "DELETE", Path: "/sessions/:pk/:related", Handler: &related, Visible: true, CheckPermissions: false})
	routeDir.Add(key.For("DeleteByIDRelated"), &interfaces.Route{Method: "DELETE", Path: "/sessions/:pk/:related/:fk", Handler: &relatedOne, Visible: true, CheckPermissions: false})
}
