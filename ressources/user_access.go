// Generated by: main
// TypeWriter: access
// Directive: +gen on User

package ressources

import (
	"github.com/Solher/auth-scaffold/interfaces"
	"github.com/Solher/auth-scaffold/usecases"
	"github.com/julienschmidt/httprouter"
)

func setUserAccessOptions(routesDir interfaces.RouteDirectory, permissionDir usecases.PermissionDirectory, controller *UserCtrl) {
	key := interfaces.NewDirectoryKey(controller)
	create := httprouter.Handle(controller.Create)
	find := httprouter.Handle(controller.Find)
	findByID := httprouter.Handle(controller.FindByID)
	upsert := httprouter.Handle(controller.Upsert)
	deleteAll := httprouter.Handle(controller.DeleteAll)
	deleteByID := httprouter.Handle(controller.DeleteByID)

	routesDir[key.For("Create")] = interfaces.Route{Method: "POST", Path: "/users", Handler: &create}
	routesDir[key.For("Find")] = interfaces.Route{Method: "GET", Path: "/users", Handler: &find}
	routesDir[key.For("FindByID")] = interfaces.Route{Method: "GET", Path: "/users/:id", Handler: &findByID}
	routesDir[key.For("Upsert")] = interfaces.Route{Method: "PUT", Path: "/users", Handler: &upsert}
	routesDir[key.For("DeleteAll")] = interfaces.Route{Method: "DELETE", Path: "/users", Handler: &deleteAll}
	routesDir[key.For("DeleteByID")] = interfaces.Route{Method: "DELETE", Path: "/users/:id", Handler: &deleteByID}

	permissions := permissionDir["admin"]
	permissions.Add(&create).Add(&find).Add(&findByID).Add(&upsert).Add(&deleteAll).Add(&deleteByID)
	permissions = permissionDir["authenticated"]
	permissions.Add(&create).Add(&find).Add(&findByID).Add(&upsert).Add(&deleteAll).Add(&deleteByID)
	permissions = permissionDir["guest"]
}
